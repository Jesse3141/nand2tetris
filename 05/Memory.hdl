// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/5/Memory.hdl
/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load=1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid and reads 0. Access to any address
 * in the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the Screen
 * and Keyboard chip specifications given in the lectures and the book.
 * implementation: 3 registers: 16k, 8K and a single register.
 * a dmux to pass adress to correct device and mux like project 3 RAM.
 * ram: 00000...0000 to 011 1111 1111 1111 (0x3FFF) (15 bits)
 * screen 100 0000 0000 0000 (0x4000)
 */
CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
	// dmux load to RAM or screen
    DMux(in=load, sel=address[14] , a=ramLoad, b=screenLoad);
    //MEM: ram16k: 2^14 address space, requires 13 bits
    RAM16K(in= in, load= ramLoad, address= address[0..13], out=ramOut);
    //SCREEN: ram8k: 2^3 address space, requires 12 bits
    Screen(in= in, load= screenLoad, address= address[0..12], out= screenOut);
    //get keyboard out
    Keyboard(out= kbdOut);
    
    //screeen: 8k
    //KBD register
    // null: returns 0

    //out with mux: address kbd: 110....
    Mux4Way16(a=ramOut, b=ramOut, c=screenOut, d=kbdOut, sel=address[13..14], out=out);
    
}