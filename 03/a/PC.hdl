// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/PC.hdl
/**
 * A 16-bit counter.
 * if      reset(t): out(t+1) = 0
 * else if load(t):  out(t+1) = in(t)
 * else if inc(t):   out(t+1) = out(t) + 1
 * else              out(t+1) = out(t)
 * similar to bit register: a wrapped dff
 * first calc all posiible load values (inc, reset or set to)
 * chain mux in increasing precednece to overwrite
 * 
 */
CHIP PC {
    IN in[16], reset, load, inc;
    OUT out[16];
    
    PARTS:
    // increment using inc16
    Inc16(in= regOut, out= regInc);
    // first mux: reg or reg inc
    Mux16(a= regOut, b= regInc, sel= inc, out= incMux);
    //second mux: firstmux or load
    Mux16(a= incMux, b= in, sel= load, out= loadMux);
    // third mux, second mux or reset
    Mux16(a= loadMux, b=false, sel= reset, out= resetMux);

    // save value
    Register(in= resetMux, load=true , out=regOut, out=out );
}